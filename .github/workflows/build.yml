name: Build, Run and Release Python App

on:
  push:
    tags:
      - 'v*'

jobs:
  set_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: extract
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  build-windows:
    runs-on: windows-latest
    needs: set_version
    env:
      APP_VERSION: ${{ needs.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Briefcase and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install briefcase
          pip install -r requirements.txt

      - name: Inject version into __main__.py
        shell: pwsh
        run: |
          (Get-Content src/canlibrarygenerator/__main__.py) -replace '__version__ = .*', '__version__ = "${{ env.APP_VERSION }}"' | Set-Content src/canlibrarygenerator/__main__.py

      - name: Build Windows app with Briefcase
        run: |
          briefcase create windows
          briefcase build windows
          briefcase package windows --adhoc-sign

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.msi

  build-macos:
    runs-on: macos-latest
    needs: set_version
    env:
      APP_VERSION: ${{ needs.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Briefcase and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install briefcase
          pip install -r requirements.txt

      - name: Inject version into __main__.py
        run: |
          sed -i '' "s/^__version__ = .*/__version__ = \"${APP_VERSION}\"/" src/canlibrarygenerator/__main__.py

      - name: Build macOS app with Briefcase
        run: |
          briefcase create macOS
          briefcase build macOS
          briefcase package macOS --adhoc-sign

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.dmg

  build-linux:
    runs-on: ubuntu-latest
    needs: set_version
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    env:
      APP_VERSION: ${{ needs.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Ensure dist/ exists
        run: mkdir -p dist/

      - name: Set up QEMU (for ARM emulation)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx (for multiarchitecture)
        uses: docker/setup-buildx-action@v3

      - name: Build app for ${{ matrix.arch }}
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            # Native build for amd64
            sudo apt-get update
            sudo apt-get install -y libgdk-pixbuf2.0-0 libglib2.0-0 libxkbcommon-x11-0
            python -m pip install --upgrade pip
            pip install briefcase
            pip install -r requirements.txt
            sed -i "s/^__version__ = .*/__version__ = \"${APP_VERSION}\"/" src/canlibrarygenerator/__main__.py
            briefcase create linux
            briefcase build linux
            briefcase package linux
          else
            # Emulated build for ARM64 insede Docker
            docker run --rm --platform linux/arm64 \
            -v "$PWD":/app \
            -v "$PWD/dist":/app/dist \
            -w /app \
            python:3.11 bash -c "
              apt-get update && \
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
                python3-dev \
                git \
                lsb-release \
                libgdk-pixbuf2.0-0 \
                libglib2.0-0 \
                libxkbcommon-x11-0 \
                build-essential \
                curl \
                sed && \
              
              python -m venv venv-briefcase && \
              source venv-briefcase/bin/activate && \
              
              echo '--- Inside virtual environment ---' && \
              which python && python --version && \
              which python3 && python3 --version && \
              echo '----------------------------------' && \
  
              pip install --upgrade pip && \
              pip install briefcase && \
  
              pip install -r requirements.txt && \
              
              sed -i 's/^__version__ = .*/__version__ = \"${APP_VERSION}\"/' src/canlibrarygenerator/__main__.py && \
              
              briefcase create linux && \
              briefcase build linux && \
              briefcase package linux
            "
          fi

      - name: Upload release asset (${{ matrix.arch }})
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.deb
        if: success()
